version: 2
jobs:
  build:
    docker:
      - image: ubuntu:18.04
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout
      - run: apt-get update -y; apt-get upgrade -y; apt-get install -y git sudo locales locales-all curl wget wamerican-insane wget;
      - run: git clone https://github.com/dkarnikis/pash.git pash
      - run: sudo bash pash/scripts/install.sh -p
      #- run: export LC_ALL en_US.UTF-8  
      #- run: export LANG en_US.UTF-8    
      #- run: export LANGUAGE en_US.UTF-8
      - run: export PASH_TOP=project/pash
      - run: export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/lib/"
      - run: ls
      - run: echo $PWD
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory
          root: /root/project/pash
          # Must be relative path from root
          paths:
            - echo-output
  test:
    docker:
      - image: ubuntu:18.04
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference

    steps:
      - checkout
      - attach_workspace:
            at: /root/project/pash
      - run: echo $PWD
      - run: git checkout top-level-tests
      - run: echo 'Running tests'
      - run: echo $PWD
      - run: bash ./run_tests.sh > results.log 2>&1
      - run: echo "Trying out workspaces" > my_workspace/echo-output


  comment:
    docker:
      - image: ubuntu:18.04
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference

    steps:
      - checkout
      - attach_workspace:
            at: my_workspace
      - run: echo $PWD
      - run: bash .c;


workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
            requires:
                - build
      - comment:
            requires:
                - build
                - test
      #  requires:
      #      - build
      #- test:
      #    requires:
      #      - build

