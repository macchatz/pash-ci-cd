name: Pash-Benchmark-Tests

# execute the workflow only when we are pushing on a pull request 
on: 
  pull_request:
    types: [assigned, opened, synchronize, reopened]
    # we should add all the paths that we should ignore 
    paths:
      - "compiler/**"
      - "runtime/**"
#    paths-ignore:
#      - "docs/**"
#      - "**/.github/workflows/main.yml"
#      - '**/README.md'
#  push:
#    branches:
#      - '*'
#      - '!master'
#    paths-ignore:
#      - "docs/**"
#      - "**/.github/workflows/main.yml"
#      - '**/README.md'

    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Jobs section
jobs:
    Pash-Tests:
        runs-on: ubuntu-18.04
        container:
            image: dkarnikis/test:latest
        steps:
          - uses: actions/checkout@v2 
            # Fetches the latest changes and executes all the benchmarks
          - name: Running-Pash-Benchmarks
            run: |
              cd /pash/           
              git pull           
              git checkout top-level-tests # ${GITHUB_REF##*/} <- branch name
              cd scripts
              bash run_tests.sh  
              cd actions
              bash parse.sh > results.log 2>&1  
              # get the timer in english
              date=$(LANG=en_us_88591; date)
              echo "VERSION<<EOF" >> $GITHUB_ENV
              echo "$date\n" >> $GITHUB_ENV
              # Parses the results and construct a github message post
              # we append the data to the global env
              cat results.log >> $GITHUB_ENV
              echo 'EOF' >> $GITHUB_ENV
          # We post the results on the corresponding pull request thread
          - name: Posting Results
            uses: unsplash/comment-on-pr@master
            if: github.ref != 'refs/heads/main'
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              msg: "${{ env.VERSION }}"
              check_for_duplicate_msg: false
          # Check the return code of the scripts. If one of the tests failed
          # post the error
          - name: Exit-code
            run: |
              cd /pash/scripts/actions
              bash exit_code.sh
